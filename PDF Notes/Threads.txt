thread is independent path of execution with in program./is light weight process. (process is program under execution.)
>extends Thread class
>implements runnable interface
class name extends Thread{
public void run(){
code......
}}
class mainclass{
psvm(){
name n=new name();
n.start();
}}
-------------------------------------
propertices:-
1>name:-is generated by jvm using constructer of threadClass.
setName("name");
getName();
2>id:-we can't modify id of thread but can be read using getId(). 
jvm identified by using id.
3>priority:-range is 1 to 10. min-1,max-10,normal-5 these are static final variables of thread class.
Thread priority is an integer value,which define the order of executing thread.
 * rang of thread is 1 to 10.
 * void setPriority(int value)
 * int getPriority().
----------------------------------------
Interrupted:- 
1>sleep()
2>join()
3>yield()

-> Interrupted methods are used to intrrupt execution of thread thread is interrupted it is moved into IDLE State.
 * thread is interrupted to allow other threads to run.
 
* 1>sleep():-is a static method of thread class. this method overloaded in thread class.
 public void run(){
try{
thread.sleep(1000);
}}

2.join():-join is a non static method of thread class. join method is overloded inside thread class.
 * >if thread1 calls join method on thread2,thread1 execution is interrupted until execution of thread2 is completed.*/
class a{
public void run(){
thread.sleep(1000);
}
class b{
public void run(){
a aa=new a();
try{ 
aa.join();
}}

3>yield():-
//yield is static method of Thread CLASS.by calling yield method of thread, thread is moved to "runnable" State.
 //* this method not throw any exception.*/
----------------------------------
Synchronization:-Synchronization is a process of acquring the lock of object.
 * when more than one thread is doing one operation not allowing another thread to perform operation is called synchronization.

*** Synchronization avoid  "Logical Error's".
 * A thread acqure lock of the object by calling synchronization method.
 * Ex:-BUS Tickets booking.
method:-synchronized void method-name(){}
------------------------------------------------------
InterthreadSynchronized:-
Interthread communication is machanisam in thead is paused runing in its critical section and anothe tread is allowed to enter in to the same section to be executed.
 * 1>wait()
 * 2>notify()
 * 3>notifyAll()

synchronized void put(int n)throws Exception{
	if(flag==true)
		wait();
	this.n=n;
	flag=true;
	notify();
	}
-----------------------------------------------------------
Runnable:-
runnable is a predefined interface exist in java.lang package.
 * this interface having only one abstract method ->public void run()
 * this run method define operation performed by Thread.

class ClassName implements Runnable{
public void run(){}
}
class mainclass{
psvm{
Thread t=new Thread(new ClassName);
t.start();
}}
------------------------------------------------------
Demanthread:- is a low priorty thread that runs in background to perform task such as garbage collection.(excution complete object is destroi).
 * setDaemon(boolean value) ->if value true, if change user thread to daemon thread.*/

class name extends Thread{
public void run(){
}}
public class names{
psvm(){
name n=new name();
n.setDaemon(true);
t.start();
....
}}
---------------------------------------------------------------
Thread pooling:-
Thread pool reuses previously created thread to execute current task and offers soluation to the problem of thread cycle overhead.
>java provide executer framework which contain Executer interface which is sub interface of Executor Service interface and the class threadpool Executor.*/
java.util.package;
ExecutorService pool=Executors.newFixedThreadPool(2);
name p1=new name();
pool.execute(p1);
-------------------------------
DeadLock  is a condition where two or more threads are blocked forevere, waiting for each other.*/















